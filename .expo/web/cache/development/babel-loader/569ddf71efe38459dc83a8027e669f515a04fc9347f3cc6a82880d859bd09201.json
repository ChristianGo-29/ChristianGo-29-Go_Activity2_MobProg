{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport globalstyles from \"./src/config/styles\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { PaperProvider, MD3LightTheme as DefaultTheme } from \"react-native-paper\";\nimport colors from \"./src/config/colors\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport LandingScreen from \"./src/components/screens/LandingScreen\";\nimport LoginScreen from \"./src/components/screens/LoginScreen\";\nimport RegisterScreen from \"./src/components/screens/RegisterScreen\";\nimport RecoveryScreen from \"./src/components/screens/RecoveryScreen\";\nimport HomeScreen from \"./src/components/screens/HomeScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n    colors: colors.colors,\n    mode: \"exact\"\n  });\n  return _jsx(PaperProvider, {\n    theme: theme,\n    children: _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          children: [_jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"Landing\",\n            component: LoginScreen\n          }), _jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"Login\",\n            component: LoginScreen\n          }), _jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"Register\",\n            component: RegisterScreen\n          }), _jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"Recovery\",\n            component: RecoveryScreen\n          }), _jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"Home\",\n            component: HomeScreen\n          })]\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create(globalstyles);","map":{"version":3,"names":["StatusBar","StyleSheet","globalstyles","SafeAreaView","PaperProvider","MD3LightTheme","DefaultTheme","colors","NavigationContainer","createNativeStackNavigator","LandingScreen","LoginScreen","RegisterScreen","RecoveryScreen","HomeScreen","jsx","_jsx","jsxs","_jsxs","Stack","App","theme","_objectSpread","mode","children","style","styles","container","Navigator","Screen","options","headerShown","name","component","create"],"sources":["C:/Users/F04/Downloads/Go_Activity2/Go_Activity2/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet } from \"react-native\";\nimport globalstyles from \"./src/config/styles\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport {\n  PaperProvider,\n  MD3LightTheme as DefaultTheme,\n} from \"react-native-paper\";\nimport colors from \"./src/config/colors\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport LandingScreen from \"./src/components/screens/LandingScreen\";\nimport LoginScreen from \"./src/components/screens/LoginScreen\";\nimport RegisterScreen from \"./src/components/screens/RegisterScreen\";\nimport RecoveryScreen from \"./src/components/screens/RecoveryScreen\";\nimport HomeScreen from \"./src/components/screens/HomeScreen\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const theme = {\n    ...DefaultTheme,\n    colors: colors.colors,\n    mode: \"exact\",\n  };\n\n  return (\n    <PaperProvider theme={theme}>\n      <SafeAreaView style={styles.container}>\n        <StatusBar style=\"auto\" />\n        <NavigationContainer>\n          <Stack.Navigator>\n            <Stack.Screen\n              options={{ headerShown: false }}\n              name=\"Landing\"\n              component={LoginScreen}\n            />\n            <Stack.Screen\n              options={{ headerShown: false }}\n              name=\"Login\"\n              component={LoginScreen}\n            />\n            <Stack.Screen\n              options={{ headerShown: false }}\n              name=\"Register\"\n              component={RegisterScreen}\n            />\n              <Stack.Screen\n              options={{ headerShown: false }}\n              name=\"Recovery\"\n              component={RecoveryScreen}\n            />\n              <Stack.Screen\n              options={{ headerShown: false }}\n              name=\"Home\"\n              component={HomeScreen}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </SafeAreaView>\n    </PaperProvider>\n  );\n}\n\nconst styles = StyleSheet.create(globalstyles);\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAE5C,OAAOC,YAAY;AACnB,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SACEC,aAAa,EACbC,aAAa,IAAIC,YAAY,QACxB,oBAAoB;AAC3B,OAAOC,MAAM;AACb,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,aAAa;AACpB,OAAOC,WAAW;AAClB,OAAOC,cAAc;AACrB,OAAOC,cAAc;AACrB,OAAOC,UAAU;AAA4C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7D,IAAMC,KAAK,GAAGV,0BAA0B,CAAC,CAAC;AAE1C,eAAe,SAASW,GAAGA,CAAA,EAAG;EAC5B,IAAMC,KAAK,GAAAC,aAAA,CAAAA,aAAA,KACNhB,YAAY;IACfC,MAAM,EAAEA,MAAM,CAACA,MAAM;IACrBgB,IAAI,EAAE;EAAO,EACd;EAED,OACEP,IAAA,CAACZ,aAAa;IAACiB,KAAK,EAAEA,KAAM;IAAAG,QAAA,EAC1BN,KAAA,CAACf,YAAY;MAACsB,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,GACpCR,IAAA,CAAChB,SAAS;QAACyB,KAAK,EAAC;MAAM,CAAE,CAAC,EAC1BT,IAAA,CAACR,mBAAmB;QAAAgB,QAAA,EAClBN,KAAA,CAACC,KAAK,CAACS,SAAS;UAAAJ,QAAA,GACdR,IAAA,CAACG,KAAK,CAACU,MAAM;YACXC,OAAO,EAAE;cAAEC,WAAW,EAAE;YAAM,CAAE;YAChCC,IAAI,EAAC,SAAS;YACdC,SAAS,EAAEtB;UAAY,CACxB,CAAC,EACFK,IAAA,CAACG,KAAK,CAACU,MAAM;YACXC,OAAO,EAAE;cAAEC,WAAW,EAAE;YAAM,CAAE;YAChCC,IAAI,EAAC,OAAO;YACZC,SAAS,EAAEtB;UAAY,CACxB,CAAC,EACFK,IAAA,CAACG,KAAK,CAACU,MAAM;YACXC,OAAO,EAAE;cAAEC,WAAW,EAAE;YAAM,CAAE;YAChCC,IAAI,EAAC,UAAU;YACfC,SAAS,EAAErB;UAAe,CAC3B,CAAC,EACAI,IAAA,CAACG,KAAK,CAACU,MAAM;YACbC,OAAO,EAAE;cAAEC,WAAW,EAAE;YAAM,CAAE;YAChCC,IAAI,EAAC,UAAU;YACfC,SAAS,EAAEpB;UAAe,CAC3B,CAAC,EACAG,IAAA,CAACG,KAAK,CAACU,MAAM;YACbC,OAAO,EAAE;cAAEC,WAAW,EAAE;YAAM,CAAE;YAChCC,IAAI,EAAC,MAAM;YACXC,SAAS,EAAEnB;UAAW,CACvB,CAAC;QAAA,CACa;MAAC,CACC,CAAC;IAAA,CACV;EAAC,CACF,CAAC;AAEpB;AAEA,IAAMY,MAAM,GAAGzB,UAAU,CAACiC,MAAM,CAAChC,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}